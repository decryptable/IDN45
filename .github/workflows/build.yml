name: Build & Release IDN45

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: idn45
            artifact_name: idn45-rust-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: idn45
            artifact_name: idn45-rust-macos-amd64
          - os: macos-latest # Apple Silicon (ARM64) target
            target: aarch64-apple-darwin
            binary_name: idn45
            artifact_name: idn45-rust-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: idn45.exe # Windows executables have a .exe extension
            artifact_name: idn45-rust-windows-amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain for target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          draft: false
          make_latest: true
          generate_release_notes: true
